name: Doc Issue Labeler and Dispatcher

on:
  issues:
    types: [opened, edited, labeled]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    name: Label documentation issues
    steps:
      - name: Install GitHub & Claude CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq
          npm install -g @anthropic-ai/claude-code
    
      - name: Check if manually labeled
        id: check_manual_label
        run: |
          if [[ "${{ contains(github.event.issue.labels.*.name, 'AI-Agent/Queued') }}" == "true" ]]; then
            echo "manual_label=true" >> $GITHUB_OUTPUT
          else
            echo "manual_label=false" >> $GITHUB_OUTPUT
          fi

      - name: Classify issue via Claude API
        if: steps.check_manual_label.outputs.manual_label == 'false'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.DOC_FIXING_AGENT_ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.DOC_FIXING_AGENT_GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          echo "Sending issue to Claude for classification..."

          # Build JSON payload safely with jq to escape newlines/quotes
          PROMPT=$(cat << 'EOL'
          You are a GitHub issue classifier for documentation fixes. IMPORTANT: You can fix these specific types of issues:

          1. broken-links - Links that are broken, dead, or pointing to wrong locations
          2. spelling-mistakes - Spelling errors in documentation text
          3. grammatical-errors - Grammar mistakes in documentation text  
          4. formatting-issues - Documentation formatting problems like indentation errors, markdown formatting issues
          5. suggestions - Documentation suggestions and improvements that include specific references or can be verified against project documentation for accuracy and validity

          CRITICAL RULES:
          - Read the issue title and body VERY carefully
          - For suggestions/improvements: Look for specific references, links, or documentation sources provided
          - Verify any provided references and cross-check against official project documentation
          - Implement solutions with high accuracy based on verified references
          - If suggestions include invalid references or contradict existing documentation, they will be labeled as AI-Agent/Cannot-Fix
          - If the issue is requesting to add completely new documentation sections without clear basis, return 'none'
          - If the issue is about functionality, code changes, or feature requests, return 'none'
          - ONLY return a category name if the issue is EXACTLY about fixing one of the 5 specific problems listed above
          - When in doubt, return 'none'

          Return ONLY the category name (broken-links, spelling-mistakes, grammatical-errors, formatting-issues, suggestions) or 'none'.
          EOL
          )

          FINAL_PROMPT="${PROMPT}

          Title: $ISSUE_TITLE
          Body: $ISSUE_BODY"

          DATA=$(jq -n --arg prompt "$FINAL_PROMPT" '{
          model: "claude-3-5-sonnet-20240620",
          max_tokens: 50,
          messages: [{role: "user", content: $prompt}]
          }')

          # Call Claude API with required anthropic-version header
          RESPONSE=$(curl -s https://api.anthropic.com/v1/messages \
          -H "Content-Type: application/json" \
          -H "x-api-key: $ANTHROPIC_API_KEY" \
          -H "anthropic-version: 2023-06-01" \
          -d "$DATA")

          echo "Claude response: $RESPONSE"

          CATEGORY=$(echo "$RESPONSE" | jq -r '.content[0].text' | tr -d '\n' | tr '[:upper:]' '[:lower:]')
          echo "Claude classified the issue as: $CATEGORY"

          # Add label if a valid category is returned
          if [[ "$CATEGORY" != "" && "$CATEGORY" != "null" && "$CATEGORY" != "none" ]]; then
            echo "Adding AI-Agent/Queued label"
            gh issue edit $ISSUE_NUMBER --add-label "AI-Agent/Queued" --repo ${{ github.repository }}
          else
            echo "No valid category returned. Not adding label."
          fi

      - name: Dispatch to docs-is if labeled
        if: steps.check_manual_label.outputs.manual_label == 'false' || contains(github.event.issue.labels.*.name, 'AI-Agent/Queued')
        env:
          GITHUB_TOKEN: ${{ secrets.DOC_FIXING_AGENT_GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          # Dispatch event to docs-is repository to create a tracking issue
          curl -X POST \
            -H "Authorization: token ${{ secrets.DOC_FIXING_AGENT_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/wso2/docs-is/dispatches \
            -d '{
              "event_type": "product-is-doc-issue",
              "client_payload": {
                "issue_number": "'"$ISSUE_NUMBER"'",
                "issue_title": "'"$ISSUE_TITLE"'",
                "issue_body": "'"$ISSUE_BODY"'",
                "issue_url": "'"${{ github.server_url }}/${{ github.repository }}/issues/$ISSUE_NUMBER"'",
                "original_repository": "'"${{ github.repository }}"'"
              }
            }'
          
          # Add comment to the original issue
          gh issue comment $ISSUE_NUMBER --body "This documentation issue has been sent to the docs-is repository for processing. You'll receive updates here when fixes are available." --repo ${{ github.repository }}
